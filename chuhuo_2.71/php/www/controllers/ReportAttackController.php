<?php
namespace app\controllers;

use app\logic\BaseController;
use app\logic\waf\report\ReportAttack;
use app\models\ReportManage;
use Yii;

/**
 * 攻击报表
 * Class ReportAttackController
 * @package app\controllers
 */
class ReportAttackController extends BaseController
{
    public $translate;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        ignore_user_abort(TRUE);
        @set_time_limit(300);
        @ini_set("memory_limit", "1000M");
        $this->translate = Yii::$app->sysLanguage;
    }

    public function actionIndex()
    {
        $data = ['current_date' => date('Y-m-d', strtotime('-1 day'))];
        return $this->render('index', $data);
    }

    /**
     * 报表预览/生成
     * @return string
     */
    public function actionPreviewCreate()
    {
        $reportAttack = new ReportAttack();
        //参数
        $params = Yii::$app->request->getBodyParams();
        $start_date = isset($params['startDate']) ? $params['startDate'] : '';
        $end_date = isset($params['endDate']) ? $params['endDate'] : '';
        $action = $params['submitType'] ? $params['submitType'] : 'preview';
        //兼容即时报表请求
        if (isset($params['selectedTime'])) {
            if ($params['selectedTime'] == 'month') {
                $start_date = $params['monthSelected'] . '-01';
                $parse_date = explode('-', $params['monthSelected']);
                $end_date = $params['monthSelected'] . '-' . $reportAttack->getLastDay($parse_date[0], $parse_date[1]);
            } elseif ($params['selectedTime'] == 'day') {
                $start_date = $params['daySelected'];
                $end_date = $params['daySelected'];
            }
        }

        //输出文件
        $extension = $params['fileType'];
        $report_real_path = Yii::$app->sysPath->wafReportPath['immediatelyPath'];
        $report_web_path = Yii::$app->sysPath->wafReportPath['immediatelyPathDown'];
        if (!is_dir($report_real_path)) mkdir($report_real_path, 0755, true);
        $file_name = "report_attack_{$start_date}_{$end_date}";
        $report_file = $report_real_path . $file_name;
        $report_web_file = $report_web_path . $file_name;
        if (!in_array($extension, ['html', 'doc', 'pdf'])) {
            Yii::$app->response->format = 'json';
            Yii::$app->response->data = ['code' => 'F', 'info' => $this->translate->getTranslateBySymbol('invalidParameter')];
            Yii::$app->end();
        }

        //预览
        if ($action == 'preview') {
            $report_file .= '.html';
            //文件已存在，直接渲染
            $last_modify = 0;
            if (is_file($report_file)) $last_modify = time() - filemtime($report_file);
            //上次创建时间，超过一小时，重新生成
            if (is_file($report_file) && $last_modify < 3600) {
                $render_page = $this->renderFile($report_file);
            } else {
                //生成
                $attack_data = $reportAttack->reportCalculate($start_date, $end_date);
                if (isset($params['report_desc'])) $attack_data['desc'] = $params['report_desc'];
                $render_page = $this->renderPartial('preview', $attack_data);
                file_put_contents($report_file, $render_page);
            }
            $asset = Yii::$app->sysPath->resourcePath . "assets/waf/";
            $render_page = str_replace("./plugins/waf_report.css", $asset . "skin/blue/style/waf_report.css", $render_page);
            $render_page = str_replace("./plugins/jquery.min.js", $asset . "js/lib/jquery.min.js", $render_page);
            $render_page = str_replace("./plugins/echarts-all.js", $asset . "js/lib/echarts/echarts-all.js", $render_page);
            return $render_page;
        }
        //创建
        if ($action == 'create') {
            //下载地址
            $down_extensions_list = ['html' => '.zip', 'doc' => '.doc', 'pdf' => '.pdf'];
            $down_extensions = $down_extensions_list[$extension];
            $report_web_down_link = $report_web_file . $down_extensions;
            //已存在报告，直接返回
            $report_exist = $report_file . $down_extensions;
            if (is_file($report_exist)) {
                //上次创建时间，超过一小时，重新生成
                $last_modify = time() - filemtime($report_exist);
                if ($last_modify < 3600) {
                    Yii::$app->response->format = 'json';
                    Yii::$app->response->data = ['info' => $this->translate->getTranslateBySymbol('reportHasBeenGenerated'), 'file_path' => $report_web_down_link];
                    Yii::$app->end();
                }
            }

            //不存在，生成
            $attack_data = [];
            $report_create_file = $report_file . ($extension == 'doc' ? '.doc' : '.html');
            if (!is_file($report_create_file)) {
                $attack_data = $reportAttack->reportCalculate($start_date, $end_date);
                if (isset($params['report_desc'])) $attack_data['desc'] = $params['report_desc'];
                $render_page = $this->renderPartial('preview', $attack_data);
                file_put_contents($report_create_file, $render_page);
            }

            if ($extension == 'html') {
                //打包
                $command = "cd {$report_real_path} && zip -r {$report_file}.zip {$file_name}.html plugins";
                shell_exec($command);
            } elseif ($extension == 'pdf') {
                //html转pdf
                $command = "/Data/apps/wkhtmltox/bin/wkhtmltopdf {$report_create_file} {$report_file}.pdf";
                shell_exec($command);
            }
            //保存数据库记录
            $report_data_exist = ReportManage::findOne(['path' => $file_name . $down_extensions, 'timetype' => 1]);
            if (!$report_data_exist) {
                $reportManage = new ReportManage();
                $reportManage->name = $start_date . $this->translate->getTranslateBySymbol('to') . $end_date . $this->translate->getTranslateBySymbol('reportAttack');
                $reportManage->type = 1;
                $reportManage->desc = isset($attack_data['desc']) ? $attack_data['desc'] : $this->translate->getTranslateBySymbol('reportAttack');
                $reportManage->time = time();
                $reportManage->path = $file_name . $down_extensions;
                $reportManage->timetype = 1;
                $reportManage->format = $extension;
                $reportManage->insert();
            } else {
                $report_data_exist->time = time();
                $report_data_exist->save();
            }

            Yii::$app->response->format = 'json';
            Yii::$app->response->data = ['info' => $this->translate->getTranslateBySymbol('reportHasBeenGenerated'), 'file_path' => $report_web_down_link];
            Yii::$app->end();
        }
    }


}
